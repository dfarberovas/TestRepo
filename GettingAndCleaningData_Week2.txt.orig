## ----------------- Reading from MySQL ------------------ ##
> instal.pacjakges("RMySQL")
>library(RMySQL)

> ucscDb<-dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
> result<-dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
[1] TRUE
> result
              Database
1   information_schema
2              ailMel1
3              allMis1
4              anoCar1
5              anoCar2
6              anoGam1

> hg19<-dbConnect(MySQL(), user="genome", db="hg19", host="genome-mysql.cse.ucsc.edu")
> allTables<-dbListTables(hg19)
> length(allTables)
[1] 11012
> allTables[1:5]
[1] "HInv"         "HInvGeneMrna" "acembly"      "acemblyClass"
[5] "acemblyPep"  
> 

> dbListFields(hg19, "affyU133Plus2")
 [1] "bin"         "matches"     "misMatches"  "repMatches"  "nCount"     
 [6] "qNumInsert"  "qBaseInsert" "tNumInsert"  "tBaseInsert" "strand"     
[11] "qName"       "qSize"       "qStart"      "qEnd"        "tName"      
[16] "tSize"       "tStart"      "tEnd"        "blockCount"  "blockSizes" 
[21] "qStarts"     "tStarts"    

> dbGetQuery(hg19, "select count(*) from affyU133Plus2")
  count(*)
1    58463
> 

> affyData<- dbReadTable(hg19, "affyU133Plus2")

> query<-dbSendQuery(hgq9, "select * from affyU133Plus2 where misMatches between 1 and 3")
> affyMis<-fetch(query)
> quantile(affyMis$misMatches)
  0%  25%  50%  75% 100% 
   1    1    2    2    3 
> 
> affyMisSmall<- fetch(query, n=10)
> dim(affyMisSmall)
[1] 10 22
> dim(affyMis)
[1] 500  22
> 
> dbClearResult(query) ## clear query from the server
[1] TRUE

## ------------------------ HDF5 ---------------------------- ##

HDF - hierarchical data format

> source("http://bioconductor.org/biocLite.R")
> biocLite("rhdf5")
> library(rhdf5)
> created=h5createFile(".\\data\\example.h5") ## create file

> created=h5createGroup(".\\data\\example.h5", "foo")
> created=h5createGroup(".\\data\\example.h5", "baa")
> created=h5createGroup(".\\data\\example.h5", "foo/foobaa")
> h5ls(".\\data\\example.h5")
  group   name     otype dclass dim
0     /    baa H5I_GROUP           
1     /    foo H5I_GROUP           
2  /foo foobaa H5I_GROUP           
> 
> A=matrix(1:10, nr=5, nc=2)
> h5write(A,".\\data\\example.h5","foo/A")
> B=array(seq(0.1,2.0,by=0.1),dim=c(5,2,2))
> attr(B,"scale")<-"liter"
> h5write(B,".\\data\\example.h5","foo/foobaa/B")
> h5ls(".\\data\\example.h5")
        group   name       otype  dclass       dim
0           /    baa   H5I_GROUP                  
1           /    foo   H5I_GROUP                  
2        /foo      A H5I_DATASET INTEGER     5 x 2
3        /foo foobaa   H5I_GROUP                  
4 /foo/foobaa      B H5I_DATASET   FLOAT 5 x 2 x 2

> df=data.frame(1L:5L,seq(0,1,length.out=5),c("ab","cde","fghi","a","s"), stringAsFactors=FALSE) 
> h5write(df,".\\data\\example.h5","df") ## write data set
> h5ls(".\\data\\example.h5")
        group   name       otype   dclass       dim
0           /    baa   H5I_GROUP                   
1           /     df H5I_DATASET COMPOUND         5
2           /    foo   H5I_GROUP                   
3        /foo      A H5I_DATASET  INTEGER     5 x 2
4        /foo foobaa   H5I_GROUP                   
5 /foo/foobaa      B H5I_DATASET    FLOAT 5 x 2 x 2

> readA=h5read(".\\data\\example.h5", "foo/A")
> readB=h5read(".\\data\\example.h5", "foo/foobaa/B")
> readdf=h5read(".\\data\\example.h5","df")
> readA
     [,1] [,2]
[1,]    1    6
[2,]    2    7
[3,]    3    8
[4,]    4    9
[5,]    5   10

> readB
, , 1

     [,1] [,2]
[1,]  0.1  0.6
[2,]  0.2  0.7
[3,]  0.3  0.8
[4,]  0.4  0.9
[5,]  0.5  1.0

, , 2

     [,1] [,2]
[1,]  1.1  1.6
[2,]  1.2  1.7
[3,]  1.3  1.8
[4,]  1.4  1.9
[5,]  1.5  2.0

> readdf
  X1L.5L seq.0..1..length.out...5. c..ab....cde....fghi....a....s..
1      1                      0.00                                2
2      2                      0.25                                3
3      3                      0.50                                4
4      4                      0.75                                1
5      5                      1.00                                5
> 

> h5write(c(12,13,14),".\\data\\example.h5","foo/A",index=list(1:3,1)) ##overwrite foo/A partly
> h5read(".\\data\\example.h5","foo/A")
     [,1] [,2]
[1,]   12    6
[2,]   13    7
[3,]   14    8
[4,]    4    9
[5,]    5   10

> h5read(".\\data\\example.h5","foo/A", index=list(1:3,1)) ## read part of data set
     [,1]
[1,]   12
[2,]   13
[3,]   14

<<<<<<< HEAD

## ---------------------------------- Reading API ----------------- ##
## Twitter API
myapp = oath_app("twitter", 
					key = "yourConsummerKeyHere",
					secrete="yourConsumerSecreteHere")
sig = sign_oaauth1.0(myapp,
						token = "yourTokenHere",
						token_secrete = "yourTokenSecreteHere")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeLine.json", sig)

json1 = content(homeTL)
json2 = jsonLite::fromJSON(toJSON(json1)) ## jsonLite creates a data frame
json2[1, 1:4]

=======
## ------------------------- Reading from the web -------------------------- ##
## web scraping

> con<-url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
> htmlCode <- readLines(con)
> close(con)
> htmlCode
[1] "<!doctype html><head><meta http-equiv=\"Content-Type\" content=\"text/html;charset=ISO-8859-1\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\"><meta name=\"referrer\" conten

> url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
> html<-htmlTreeParse(url, useInternalNodes=T)
> xpathSApply(html, "//title",xmlValue)
[1] "Jeff Leek - Google Scholar Citations"

> xpathSApply(html, "//td[@id='col-citedby']", xmlValue)

## httr
> library(httr)
> url<-"http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
> html2<-GET(url)
> content2<-content(html2,as="text")
> parsedHtml<-htmlParse(content2,asText=TRUE)
> xpathSApply(parsedHtml,"//title",xmlValue)
[1] "Jeff Leek - Google Scholar Citations"
> 

## basic authentication
> pg2=GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user","passwd"))

## use handle to save cookies and authentication
> google=handle("http://google.com")
> pg1=GET(handle=google, path="/")
> pg2=GET(handle=google, path="search")
>>>>>>> d1fbcedf24181100a0f344873564f4f09a3bc104
