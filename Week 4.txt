## Week4 ##
summary()
str()
head()
tail()

## ---------------- Simulation ------------------ ##
rnorm 		random normal variates with a given mean and standard deviation
rpois		random Poisson variates whith a given rate

dnorm		evaluate the Normal probability denstity (with a given SD) at a point or a vector of points
pnorm		evaluate cumulative distribution function for a Normal distribution 

	d - for distribution 
	r - for random number generation
	p - for cumulative distribution
	q - for quantile function
	
set.seed(x) ## sets seed for random number generation

rpois (n, lambda)  ## n - number of values; lambda - rate 
poisson distribution => mean is equal rate

ppois(q, lambda, lower.tail = TRUE, log.p = FALSE)  ## q - value, lambda - rate
ppois(2,2) 	## probability of less than 2 (<=2) if rate is equal 2


## -------------------------------------------------------------------- ##

sample() ## random sample from given vector
> sample(1:10,5)
[1]  2 10  7  6  9

> sample(1:10)	## permutation !!!
 [1] 10  8  7  9  6  4  1  2  5  3
 
 > letters
 [1] "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w"
[24] "x" "y" "z"
> sample(letters,5)
[1] "j" "c" "b" "s" "w"

> sample(1:10, replace=TRUE) ## repeated numbers !!!
 [1] 6 3 8 7 9 7 5 5 4 5
 
 ## ------------------- Profile ----------------------- ##
 user time 	  (UT)	- CPU time
 elapsed time (ET)	- wall clock time (you see the result)
 ET > UT => CPU idle too much
 UT < ET => multi-CPU with parallel execution
 
 > hilbert <- function(x){
+     i<-1:x
+     1 / outer(i-1,i,"+")
+ }
> x<-hilbert(1000)
> system.time(svd(x))
   user  system elapsed 
   2.73    0.01    2.83 

 > system.time({
+     n<-1000
+     r<-numeric(n)
+     for(i in 1:n){
+         x<-rnorm(n)
+         r[i]<-mean(x)
+     }
+ })
   user  system elapsed 
   0.11    0.00    0.10
 
 
 Rprof()
 summaryRprof
	by.total	- divides time spent in each function by the total run time
	by.self		- does the same but first subtracts out time spent in function above in the call stack

 